---
import { Icon } from 'astro-icon/components';
import LinkButton from './LinkButton.astro';
import Badge from '../common/Badge.astro';
import ProjectType from '../common/ProjectType.astro';

interface Props {
  title: string;
  url: string;
  icon?: string;
  thumbnail?: string;
  imagePlaceholder?: boolean;
  description: string;
  technologies: string[];
  type: string;
  published?: boolean;
}

const { title, url, icon, thumbnail, imagePlaceholder, description, technologies, type } = Astro.props;
---

<div class="block w-full neo-card p-4 bg-white">
  <!-- Thumbnail Image -->
  <div class="w-full aspect-video mb-3 rounded neo-border overflow-hidden flex items-center justify-center bg-white">
    {thumbnail && !imagePlaceholder ? (
      <img
        src={thumbnail}
        alt={`${title} thumbnail`}
        class="w-full h-full object-cover object-center"
        onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
      />
    ) : (
      <div class="flex items-center justify-center w-full h-full">
        {icon && <Icon name={icon} class="w-12 h-12" style="color: var(--biolink-body-text-color)" />}
      </div>
    )}
    <div class="hidden items-center justify-center w-full h-full">
      {icon && <Icon name={icon} class="w-12 h-12" style="color: var(--biolink-body-text-color)" />}
    </div>
  </div>
  
  <!-- Header with Icon and Title -->
  <div class="flex items-center gap-3 mb-2">
    {icon && (
      <div class="flex-shrink-0">
        <Icon name={icon} class="w-6 h-6" style="color: var(--biolink-accent-text-color)" />
      </div>
    )}
    <h3 class="font-heading text-xl font-bold leading-tight" style="color: var(--biolink-body-text-color)">
      {title}
    </h3>
  </div>
  
  <!-- Project Type Badge -->
  <div class="mb-3">
    <ProjectType text={type} />
  </div>
  
  <!-- Description -->
  <p class="text-sm mb-3 leading-tight font-mono" style="color: var(--biolink-body-text-color)">
    {description}
  </p>
  
  <!-- Technologies -->
  {technologies && technologies.length > 0 && (
    <div class="mb-3">
      <div class="flex flex-wrap gap-1">
        {technologies.map(tech => (
          <Badge text={tech} />
        ))}
      </div>
    </div>
  )}
  
  <!-- Link Arrow -->
  <div class="flex ">
    <LinkButton 
      title="View Project" 
      icon='tabler:external-link' 
      url={url}
    />
  </div>
</div>